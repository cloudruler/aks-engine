{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AzureCNINetworkMonitorImageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Azure CNI networkmonitor Image URL"
      },
      "type": "string"
    },
    "agentSubnet": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the subnet of the agent node(s)."
      },
      "type": "string"
    },
    "agentpool1Count": {
      "defaultValue": 2,
      "metadata": {
        "description": "The number of vms in agent pool agentpool1"
      },
      "type": "int"
    },
    "agentpool1Subnet": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpool1'."
      },
      "type": "string"
    },
    "agentpool1VMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4as_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8as_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16as_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8as_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2as_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16as_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32as_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2as_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4as_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E80ids_v4",
        "Standard_E80is_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96-24as_v4",
        "Standard_E96-48as_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128dms_v2",
        "Standard_M128ds_v2",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128ms_v2",
        "Standard_M128s",
        "Standard_M128s_v2",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192idms_v2",
        "Standard_M192ids_v2",
        "Standard_M192ims_v2",
        "Standard_M192is_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32dms_v2",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ms_v2",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64dms_v2",
        "Standard_M64ds_v2",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64ms_v2",
        "Standard_M64s",
        "Standard_M64s_v2",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC16as_T4_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC4as_T4_v3",
        "Standard_NC6",
        "Standard_NC64as_T4_v3",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_NC8as_T4_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpool1osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "agentpool1osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "agentpool1osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "agentpool1osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "agentpool1osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "agentpool1osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "aksEngineVersion": {
      "metadata": {
        "description": "Contains details of the aks-engine version which was used to provision the cluster"
      },
      "type": "string"
    },
    "apiServerCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "apiServerPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "caCertificate": {
      "metadata": {
        "description": "The base 64 certificate authority certificate"
      },
      "type": "string"
    },
    "caPrivateKey": {
      "metadata": {
        "description": "The base 64 CA private key used on the master."
      },
      "type": "securestring"
    },
    "clientCertificate": {
      "metadata": {
        "description": "The base 64 client certificate used to communicate with the master"
      },
      "type": "string"
    },
    "clientPrivateKey": {
      "metadata": {
        "description": "The base 64 client private key used to communicate with the master"
      },
      "type": "securestring"
    },
    "cloudproviderConfig": {
      "defaultValue": {
        "cloudProviderBackoff": false,
        "cloudProviderBackoffDuration": 0,
        "cloudProviderBackoffExponent": "0",
        "cloudProviderBackoffJitter": "0",
        "cloudProviderBackoffMode": "v1",
        "cloudProviderBackoffRetries": 10,
        "cloudProviderDisableOutboundSNAT": false,
        "cloudProviderRateLimit": false,
        "cloudProviderRateLimitBucket": 0,
        "cloudProviderRateLimitBucketWrite": 0,
        "cloudProviderRateLimitQPS": "0",
        "cloudProviderRateLimitQPSWrite": "0"
      },
      "type": "object"
    },
    "cniPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/cni-plugins/v0.7.6/binaries/cni-plugins-amd64-v0.7.6.tgz",
      "type": "string"
    },
    "containerRuntime": {
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "defaultValue": "docker",
      "metadata": {
        "description": "The container runtime to use (docker|containerd)"
      },
      "type": "string"
    },
    "containerdDownloadURLBase": {
      "defaultValue": "https://storage.googleapis.com/cri-containerd-release/",
      "type": "string"
    },
    "containerdVersion": {
      "allowedValues": [
        "1.3.2",
        "1.3.3",
        "1.3.4",
        "1.3.5",
        "1.3.6",
        "1.3.7",
        "1.3.8",
        "1.3.9"
      ],
      "defaultValue": "1.3.9",
      "metadata": {
        "description": "The Azure Moby build version"
      },
      "type": "string"
    },
    "dockerBridgeCidr": {
      "metadata": {
        "description": "Docker bridge network IP address and subnet"
      },
      "type": "string"
    },
    "enableAggregatedAPIs": {
      "defaultValue": false,
      "metadata": {
        "description": "Enable aggregated API on master nodes"
      },
      "type": "bool"
    },
    "etcdClientCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "etcdClientPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "etcdDiskSizeGB": {
      "metadata": {
        "description": "Size in GB to allocate for etcd volume"
      },
      "type": "string"
    },
    "etcdDownloadURLBase": {
      "metadata": {
        "description": "etcd image base URL"
      },
      "type": "string"
    },
    "etcdEncryptionKey": {
      "metadata": {
        "description": "Encryption at rest key for etcd"
      },
      "type": "string"
    },
    "etcdPeerCertificate0": {
      "metadata": {
        "description": "The base 64 server certificates used on the master"
      },
      "type": "string"
    },
    "etcdPeerPrivateKey0": {
      "metadata": {
        "description": "The base 64 server private keys used on the master."
      },
      "type": "securestring"
    },
    "etcdServerCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "etcdServerPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "etcdVersion": {
      "metadata": {
        "description": "etcd version"
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "10.255.255.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "fqdnEndpointSuffix": {
      "defaultValue": "cloudapp.azure.com",
      "metadata": {
        "description": "Endpoint of FQDN."
      },
      "type": "string"
    },
    "gcHighThreshold": {
      "defaultValue": 85,
      "metadata": {
        "description": "High Threshold for Image Garbage collection on each node"
      },
      "type": "int"
    },
    "gcLowThreshold": {
      "defaultValue": 80,
      "metadata": {
        "description": "Low Threshold for Image Garbage collection on each node."
      },
      "type": "int"
    },
    "generatorCode": {
      "metadata": {
        "description": "The generator code used to identify the generator"
      },
      "type": "string"
    },
    "kubeBinaryURL": {
      "defaultValue": "",
      "metadata": {
        "description": "The package tarball URL to extract kubelet and kubectl binaries from."
      },
      "type": "string"
    },
    "kubeClusterCidr": {
      "metadata": {
        "description": "Kubernetes cluster subnet"
      },
      "type": "string"
    },
    "kubeConfigCertificate": {
      "metadata": {
        "description": "The base 64 certificate used by cli to communicate with the master"
      },
      "type": "string"
    },
    "kubeConfigPrivateKey": {
      "metadata": {
        "description": "The base 64 private key used by cli to communicate with the master"
      },
      "type": "securestring"
    },
    "kubeDNSServiceIP": {
      "metadata": {
        "description": "Kubernetes DNS IP"
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterOffset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
      },
      "type": "int"
    },
    "masterSubnet": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterSubnetIPv6": {
      "defaultValue": "2001:1234:5678:9abc::/64",
      "metadata": {
        "description": "Sets the IPv6 subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4as_v4",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8as_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16as_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8as_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2as_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16as_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32as_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2as_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4as_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E80ids_v4",
        "Standard_E80is_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96-24as_v4",
        "Standard_E96-48as_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128dms_v2",
        "Standard_M128ds_v2",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128ms_v2",
        "Standard_M128s",
        "Standard_M128s_v2",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192idms_v2",
        "Standard_M192ids_v2",
        "Standard_M192ims_v2",
        "Standard_M192is_v2",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32dms_v2",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ms_v2",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64dms_v2",
        "Standard_M64ds_v2",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64ms_v2",
        "Standard_M64s",
        "Standard_M64s_v2",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC16as_T4_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC4as_T4_v3",
        "Standard_NC6",
        "Standard_NC64as_T4_v3",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_NC8as_T4_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "maxPods": {
      "defaultValue": 30,
      "metadata": {
        "description": "This param has been deprecated."
      },
      "type": "int"
    },
    "mobyVersion": {
      "allowedValues": [
        "3.0.1",
        "3.0.2",
        "3.0.3",
        "3.0.4",
        "3.0.5",
        "3.0.6",
        "3.0.7",
        "3.0.8",
        "3.0.10",
        "3.0.11",
        "3.0.12",
        "3.0.13",
        "19.03.11",
        "19.03.12",
        "19.03.13",
        "19.03.14"
      ],
      "defaultValue": "19.03.14",
      "metadata": {
        "description": "The Azure Moby build version"
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "16102130",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "networkMode": {
      "allowedValues": [
        "",
        "transparent",
        "bridge"
      ],
      "defaultValue": "transparent",
      "metadata": {
        "description": "The network mode to use for CNI (transparent|bridge)"
      },
      "type": "string"
    },
    "networkPlugin": {
      "allowedValues": [
        "kubenet",
        "azure",
        "flannel",
        "cilium",
        "antrea"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "The network plugin to use for Kubernetes (kubenet|azure|flannel|cilium|antrea)"
      },
      "type": "string"
    },
    "networkPolicy": {
      "allowedValues": [
        "",
        "none",
        "azure",
        "calico",
        "cilium",
        "antrea"
      ],
      "defaultValue": "",
      "metadata": {
        "description": "The network policy enforcement to use (calico|cilium|antrea); 'none' and 'azure' here for backwards compatibility"
      },
      "type": "string"
    },
    "orchestratorName": {
      "maxLength": 3,
      "metadata": {
        "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
      },
      "minLength": 3,
      "type": "string"
    },
    "osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzurePublicCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
      },
      "type": "string"
    },
    "vnetCidr": {
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Cluster vnet cidr"
      },
      "type": "string"
    },
    "vnetCidrIPv6": {
      "defaultValue": "2001:1234:5678:9a00::/56",
      "metadata": {
        "description": "Cluster vnet cidr IPv6"
      },
      "type": "string"
    },
    "vnetCniLinuxPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/azure-cni/v1.0.30/binaries/azure-vnet-cni-linux-amd64-v1.0.30.tgz",
      "type": "string"
    },
    "vnetCniWindowsPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/azure-cni/v1.0.30/binaries/azure-vnet-cni-windows-amd64-v1.0.30.zip",
      "type": "string"
    }
  },
  "variables": {
    "agentLbBackendPoolName": "[parameters('masterEndpointDNSNamePrefix')]",
    "agentLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentLbName'))]",
    "agentLbIPConfigID": "[concat(variables('agentLbID'),'/frontendIPConfigurations/', variables('agentLbIPConfigName'))]",
    "agentLbIPConfigName": "[concat(parameters('orchestratorName'), '-agent-outbound')]",
    "agentLbName": "[parameters('masterEndpointDNSNamePrefix')]",
    "agentPublicIPAddressName": "[concat(parameters('orchestratorName'), '-agent-ip-outbound')]",
    "agentpool1Count": "[parameters('agentpool1Count')]",
    "agentpool1Index": 0,
    "agentpool1SubnetName": "[variables('subnetName')]",
    "agentpool1SubnetResourceGroup": "[split(variables('agentpool1VnetSubnetID'), '/')[4]]",
    "agentpool1VMNamePrefix": "k8s-agentpool1-16102130-vmss",
    "agentpool1VMSize": "[parameters('agentpool1VMSize')]",
    "agentpool1Vnet": "[split(variables('agentpool1VnetSubnetID'), '/')[8]]",
    "agentpool1VnetSubnetID": "[variables('vnetSubnetID')]",
    "agentpool1osImageName": "[parameters('agentpool1osImageName')]",
    "agentpool1osImageOffer": "[parameters('agentpool1osImageOffer')]",
    "agentpool1osImagePublisher": "[parameters('agentpool1osImagePublisher')]",
    "agentpool1osImageResourceGroup": "[parameters('agentpool1osImageResourceGroup')]",
    "agentpool1osImageSKU": "[parameters('agentpool1osImageSKU')]",
    "agentpool1osImageVersion": "[parameters('agentpool1osImageVersion')]",
    "alwaysPullWindowsPauseImage": "false",
    "apiVersionAuthorizationSystem": "2018-09-01-preview",
    "apiVersionAuthorizationUser": "2018-09-01-preview",
    "apiVersionCompute": "2019-07-01",
    "apiVersionDeployments": "2018-06-01",
    "apiVersionKeyVault": "2019-09-01",
    "apiVersionManagedIdentity": "2018-11-30",
    "apiVersionNetwork": "2018-08-01",
    "apiVersionStorage": "2018-07-01",
    "applicationInsightsKey": "c92d8284-b550-4b06-b7ba-e80fd7178faa",
    "cloudInitFiles": {
      "customSearchDomainsScript": "H4sIAAAAAAAA/3yQP2/bQAzF9/sUrN2hHU4nGzC6tkOzZsqSRaBOtHTR6SiQdBwZ+fCBIwNBgCALAb73wD+/7Y/QphJa1MEpGfgXp3ySSBB4toCXk1CIXAxTIdEwCz8nTVyaNVbp4BzFgWED0BX1SihxgA28ghGBRwhkMRSyM8sYUjGSI0bSqguH2sfMp86nkqyKx97pokZTtNwIqaEY7Gs4wK6G24BUenfGZM2RpcHZmsxxVCdkssSpuyYPsNvXgLP5/vrQAqmoYc4ghHnqQFXX4o05KyhOLfrI08RlbT5L82IDl3315ybn1CrMGEfsaUz21TkrkCuD953wxKmAf4C/P399WCYQ0F8ChH/+MfyGbzy3/X9/594CAAD//x81gP2sAQAA",
      "dhcpv6ConfigurationScript": "H4sIAAAAAAAA/3RRT2vbThC9z6d4P8U4vx7WsgvxpWmgKFIqaiQIDr0UhKwdRUvVXVW76wQcffeiCBXaOpcd5jHvz85c/Bd624cHpUPWRxxK2xBZdhA8FYNOdVyXqp16T3T7OdqlcbbfFlGeJUWS7uKPIbsqlE3VjU+rWLvtqjK6pmiXP9wWaZbuiyi5m+Y0uyfTfw+VdtzXZcV2JcOrtaha46VQWrlVVT8S9VxKiB5C4vISWbz/mt9/eTVN7x7uP+3TPMP1dZxHeHmB6z2TGtXArllDaXZblN4ZAgDfwbbMHa7mdg4KsYHYQlQ13voFRFsjPJZ92KrD3wOj26rl0rKFOE7mc544j4hKKQtVF9q4gp+Vdfb/dzgR8NhzB/HzOUGwOG2GYCzvh2Akc9WYGb25mXAaiJzxVfN2zOUS/5ghcOoHG++wWX8IsDidOd8wMr8RzrEXp7OLH0apP4/7W8V6aaBqaZ70tI7lcsZ894rQRZwn9CsAAP//3eGEyH0CAAA=",
      "dhcpv6SystemdService": "H4sIAAAAAAAA/zTNsc6CMBAH8P1e45uh27d10IiJkwMaB8JQy19prNfmeqD49A7EJ/h1Zw7a0w7FS8gaEluwu0YMo8/zP21uCrEMfSV5VIljYNTq5A4l6lrIHDx6Oi0ZNjHKmJSaN3yrTtSalNW4zyQwPrG6wJBiVqBahbqMRN2Bi7oYe7o4VgzbxT6nqKGaCuTH/TXHPX0DAAD//wVR54mwAAAA",
      "dockerMonitorSystemdService": "H4sIAAAAAAAA/zSOwUrDQBCG7/sUC56T6APsoeoKOZhC0uIhBBk3UzN0Myuzk9q8vdDY2zcw//f//ZFJB/OKOQj9KCV2YDe2OoHaMGE4ZzumcEaxE0LUyQKPVjAriGZLJ8uII45md1IUt72WGeVCAU3fbTCYdks4iL+w5vvZYXBPj6bFGYhvBn8ldStm4/lCknhGVveybw67uvHtZ3tsDvW7/+8x/oqhu3mrJUsVU4BYfRFX29ZiTkyapMyTDYkViFEKWVhpRtPXnBViHMwHsOL4vLp5iUrFklFKBflGNQ9+/2b+AgAA//9HkzLkKQEAAA==",
      "etcdMonitorSystemdService": "H4sIAAAAAAAA/zSOsUrFQBBF+/mKBeuX6AdsoRjBSnhBLEKKcXOfO7jZyMxEX/5eTLC7F86BM7xW8ZEeYUnly2WpkcOxg2f2kDLSpwV4mkIGF8+B6xQU5qxuQS6hAhMmur84NP6BjUG/JYGG/hgjnQ8+cvnhzf5vjxTvbumMmaXufncVjxuMuitSvyvtatqWJXFp36W2R8RpXqr4oo3lvY2G52rOpYz0xtUxPWxxXovLaTVo46wfcLrpXp7oNwAA//+L4/L48wAAAA==",
      "etcdSystemdService": "H4sIAAAAAAAA/4SRPY/bMAyGd/0KDb1R0X6ABrd22xvuA0kOHYIgkG0mJiJTLkX56n9fWOihTTt0JZ9H4Pvq8EooR1VD6hgnwUgOpOu10QNehrAYP3sMvg2gr7Do2YcMOklkUHXs8ggkvliDyJTurb2gDLnddHG0XWSIya7v/QWPnu7LuDoLsCOQt8jXjXi+gOjZswnYmpXoMV03Y8wk6psnSe+siRSQ4D/KYQc8YwdH1dCMHGk9wdVV8/j8dKq2X3buZtHsP9Wnp+qxcXdf/13U1b461Q/bG+czBnBmzWh7OPscxN5Nar9M4CgKnhf1moBLp+oFeMSUMFLaiWd5prA44Qyq+QFdGb0wONsi2XL/FJFEm+/azp5twNa+5/ttOJsTF6X824c/wqktpIL48OaXpA4PlMSHcCxVQv9xcWMOgiYn4F9Nqp8BAAD//xtfqZERAgAA",
      "healthMonitorScript": "H4sIAAAAAAAA/6xW0W7bNhR951fcqMLQPsi0UqDd3ClAUBiLsS4NbGcPKwpDoa4rwhIpkJTbVNG/DxRl2YodJ0uWl1jCOefee3hI6tUJLbWiN1xQFGu4iXVKtCwVQ6CyMDT+WSqkTAoTc4FK00LJNddcioWDDXRKiEYDgQQhS6HRbB4LXuAy5hkhHX+hSmF4jotcCm6k4uLb6zdQEQCdIRbwdjgEApBJFmfAFF+IOMfI86uPny/n55PL8XQxvb6cT/4aj4JEshWq2gOWJ5HnnqDQHgHgS/jyBQ6waogi8Lp2Eg++fv0AJkVBAMApMaMgELD6VQ+4hO3okDXaS04IwPeUZwhGlfgBEtmQ+RJOwA4nSwPvhuBXLE9qOKMJrqkos2ynEACyVIL3caMOrTGW1Y5dgzUPkxOvpTiLwsah/16wc2Wj31jhbLtng/srVjzLIJhN/rieTUNwyKQDLPlR4Qc9Pii+RR/S17faYM5MBo4V2H/B91RGecwFeDueeVtS49a7zq3Wr60W10HMDF/3PN9rdIvXJlZmF7vfavsDM429NfP8avZpPL5aNBl0PTbYRAokNSGr8gYzNE/aFnn8Y6GRSZHoKByCLE1RmsjztgAnsnBpLlUGQQ5+tcOrIVhCoCGYQWpMMaI0PH0/GA6Gg3DkVxfj80/zi3+uPk/nNU0xzkz60zuS+bYD/7Vf7ZSu4fTsl/DNfuh9h+/tgz/d/MA1lMKVvD2e+6cX3ctPa/ZzktJSH03J/RIvTwgalvw/8UCRFJILE3l27fWIUr+6mk7+Pp+PF5OrenT69v1vR8PU5OZApAIWM1QGKBpGrQNKoEFN7UtNWTxgyljUwxg7JMs4CtNiV3j7ONSC/GozVk3XpzSPWcoF6mfE9omJtfVfHtdHkmqLPCemlvdoRnviLw9oewm8gkAghLtnvjPsWsffcATOraA1YaBT+L07/IP2Erxrt8+dbfHM1sIf3EBI7N277SIKh4TJvJAChYn8kLhCs24HusC0JWG7eWAplT3IN9za69rfedm/xja99W6zY981BLMHNNvpekr7F8DDfOtKj3zvbCDt4jk7Lg5O30n25bkGIQ3osiikMs23x5KTfwMAAP//B/dbSSUKAAA=",
      "kubeletMonitorSystemdService": "H4sIAAAAAAAA/zSOQUvDQBCF7/MrFjy3acWDlz1UjFQQKklFMOQw3UzN0M2s7Exq8++Fxt6+gXnvfc2HsLXwTBoy/xgn8ehmdtajudBTOKk7jQeKZK4njNY7lM5lUsNs6vjohKijDjZHo+z/f5dK+cyBoKlnaKGUM+ckA4n5bbl522+/3nfV3q9X9w+PUM2FHuMvTno7awp+vYKKBmS5DpQXNj+RQnmhUF8jxai5iClgLA4sxWy5GJKwpbzU/uYPzauoYYwtfKIYdU+TH8ZovBiV8tIwf5PBXbl7gb8AAAD//3MkF98aAQAA",
      "kubeletSystemdService": "H4sIAAAAAAAA/3SPwU4CMRCG730KQrgujdFrDwLFEAgQVuIBCZntjjKhtNiZImh8d4OCenFOk8n/fZl/MQ8kS9VDdol2QjGYYa7Qo6huDDWdLlOQtT0QCxudOWkfHXhdUdCbc3SGL5kSsqmj22BqM6Y9OVRqUX5vSzVDFkhiwL/CkZUNe0oxbDFInzwajeJ0jU+Qvfxoy+wcMtsDSSkgmc3VzbWyB3TlyTVNaL7eqIDXDR13ouEtJ9QuBgEKmPiiavP6l/unReNRNc5TFCHWWHio0LNptt6H844d2fvVeNKzq9Ftx47Kj+YfoHUJdCfj/uBOLQaBBbxfqgcIgnXnaLbZCxWZMbUF0jOK+gwAAP//xbtnxXwBAAA=",
      "provisionConfigs": "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",
      "provisionInstalls": "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",
      "provisionScript": "H4sIAAAAAAAA/7RXb2/bvhF+z09xP9XIH/wqO+62IEXhAqqtNFoc25PtdFsRCLJ0sonIpEJS+dMk332gZCmyrTRut70TH/GOz909PJLv/mjNKGvNfLkgtut6p07f9r5Zk+6ZN3Eu7OF00jkGQiQqMO8JjeA7mBG0eKJa/o9UYCvgTPmUoZCtRPBbKilnzYAvkxgVwtUnUAtkBADvqYIjElFCMFhwaByEvsLD942DBZeK+Us8fA9S+UIFqVR8KQNBEwWfP2drLQmJuAAKlEHjQOINtOEvx0dHh58g5AQgJybfIuZJnooAm3JRYQYwF5iAeXoD++/O7P7Idsf28HT/F5zt7cFMoH9NACJa0GlQMPEmo7m2WpaJY52SWGKGyBgxgXZuHXKGRGIIJgWjVSHUCo3dKZH86xcMAs4iOk8FeolAgTcplVShJOTOp8qLuPAiGmMeTvtNv5RJ5cex1Nl5eipi3pFUxZgQZDIVaI0u/g3G7VHzb822QfDWj8FoHPjJ8gdo7YIZHhrkN7nmkf8e1RfbfJP8eU/sSbfnjWzb9bq2O+k0DnK9P67jzqnTtSb2+BmeIEgVmOH+9329tz68AFcZ0H4B3mdA4+BgMOzZnjPo2f+EP6F9eHhYWfXc/lfdoiPXubQmtv79P1t01RaIokv0lqgEDcDoFkKywiVlU4nCgGAL27CJ0Wdp0i1SHBoQaGhagQhArdHX0bQn6C0KWRq9QNqIkMuzntcffh1n7W1kTc46lbreLkJzpbiycZWdrrFlWtnL22wqfJ2lP0e5HUeOE4DTab/vOYPxxOr3Pdf+x9Rx7V4n8nVXWLUGzeI7NB6dsXd51nuGTgeUSBGutvpJ++S4aD71frVd1n0Ln9Mv08Fk6rl237bGdubbaJ80j/5qVN3TCPxEQUylArNIE4bwlDfN/WAhOHvYr9Cp10I3m1cRQg5sW9jZdi+mY2WUx1cJYTjWpBurQIZjb2Bd2FXyNY6tNKSqVzjORxs+/+hA47RvTbqWu+10zeUqHRd89mBAZUAqHk0GjccLazyxXU9voGe4utLnhf71AxqP3eH4Yjj2pq7zXKUexNRTnMcdI+TBNQpDC3kjIidf0VZBWC6vB9AorDMepM5ogOqOi+tRnM4pK63X0HrD83SGMSqLhforUHFpvPVn56S+IgJ31C0K5Y66r0pFcFYKRXCWxbwuQoG+Qk3qwmc0Qql6VPekOpj8l3WrV7+uykYjLKA3pFI6rql/6X6MgUAlK95XSF7//1NAG8EUPWvNwMUlv13NFuW3plVTyV6u9FUt89GmfEsG5yfVeM9P5GsTuwOn2nYGzk7prvFlhSFn5aL5aHPmN0FzSeUmBtytA3lBNoPKw1/tnyL+1bB26t95KpgfF1NXw50CoxHoc1HfXeYKofF4Pv1iuwN7Yo+9S9sdO8PBM7Sb7eOf782+P8N4wEN9wuEGUr0F/1xcta5ztWD5XbirS9mJ1Oeq4PEo9hmWqVuHy/dBBK1bX7REyloCZ5wrM7vnCgzhVU4uJrEfYF5uh1GlhbwBVe/ydWfOSjhYGZWHmVhmvFAFLV9fSRLV1AJrhq2PHxMUlIc0+L0Db5SKOVqJMvQJ7s1ReYlGwE/8YIEfzFTRWMJeJsliRproV5luCynzlUIWYuilyVz4IRLyC1lUwg/QoyziOoV6lruaZICRm2VXEn2ulS9QMAMw5CJVIb9jYApow57xcg16M3zQkS59cf3N6lOW3ltzZApStuBxCHt5ytdvVju4bKVStGI6K8sjH6TCZdgMfRo/ZG53Wbd8+BrdsQ0RZVQuMASZBgFKGaVx/GD85GWMLKx/Fy+vQyrATOpfKrqSiqfBYucnO0kk+Ol9dHcHnys25UQzkc2Yz2GPkNWTnryzh6fkPwEAAP//qIoovkkQAAA=",
      "provisionSource": "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"
    },
    "clusterKeyVaultName": "",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "customCloudAuthenticationMethod": "client_secret",
    "customCloudIdentifySystem": "azure_ad",
    "enableHostsConfigAgent": false,
    "enableTelemetry": false,
    "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
    "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
    "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
    "etcdPeerCertFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.crt",
      "/etc/kubernetes/certs/etcdpeer1.crt",
      "/etc/kubernetes/certs/etcdpeer2.crt",
      "/etc/kubernetes/certs/etcdpeer3.crt",
      "/etc/kubernetes/certs/etcdpeer4.crt"
    ],
    "etcdPeerCertificates": [
      "[parameters('etcdPeerCertificate0')]"
    ],
    "etcdPeerKeyFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.key",
      "/etc/kubernetes/certs/etcdpeer1.key",
      "/etc/kubernetes/certs/etcdpeer2.key",
      "/etc/kubernetes/certs/etcdpeer3.key",
      "/etc/kubernetes/certs/etcdpeer4.key"
    ],
    "etcdPeerPrivateKeys": [
      "[parameters('etcdPeerPrivateKey0')]"
    ],
    "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
    "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
    "excludeMasterFromStandardLB": "true",
    "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', parameters('fqdnEndpointSuffix'))]",
    "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
    "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
    "loadBalancerSku": "Standard",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat('master-availabilityset-', parameters('nameSuffix'))]",
    "masterCount": 1,
    "masterEtcdClientPort": 2379,
    "masterEtcdClientURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
    ],
    "masterEtcdClusterStates": [
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
    ],
    "masterEtcdMetricURLs": [
      "[concat('http://', variables('masterPrivateIpAddrs')[0], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[1], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[2], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[3], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[4], ':2480')]"
    ],
    "masterEtcdPeerURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
    ],
    "masterEtcdServerPort": 2380,
    "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterFqdnPrefix": "cloudruleraksengine",
    "masterLbBackendPoolName": "[concat(parameters('orchestratorName'), '-master-pool-', parameters('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(parameters('orchestratorName'), '-master-lbFrontEnd-', parameters('nameSuffix'))]",
    "masterLbName": "[concat(parameters('orchestratorName'), '-master-lb-', parameters('nameSuffix'))]",
    "masterOffset": "[parameters('masterOffset')]",
    "masterPrivateIpAddrs": [
      "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
    ],
    "masterPublicIPAddressName": "[concat(parameters('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', parameters('nameSuffix'))]",
    "masterVMNamePrefix": "k8s-master-16102130-",
    "masterVMNames": [
      "[concat(variables('masterVMNamePrefix'), '0')]",
      "[concat(variables('masterVMNamePrefix'), '1')]",
      "[concat(variables('masterVMNamePrefix'), '2')]",
      "[concat(variables('masterVMNamePrefix'), '3')]",
      "[concat(variables('masterVMNamePrefix'), '4')]"
    ],
    "maxVMsPerPool": 100,
    "maximumLoadBalancerRuleCount": 250,
    "networkContributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
    "orchestratorNameVersionTag": "Kubernetes:1.18.16",
    "primaryAvailabilitySetName": "",
    "primaryScaleSetName": "k8s-agentpool1-16102130-vmss",
    "provisionScriptParametersCommon": "[concat('ADMINUSER=cloudruleradmin APISERVER_PUBLIC_KEY=',parameters('apiServerCertificate'),' AUTHENTICATION_METHOD=client_secret CLOUDPROVIDER_BACKOFF=true CLOUDPROVIDER_BACKOFF_DURATION=5 CLOUDPROVIDER_BACKOFF_EXPONENT=0 CLOUDPROVIDER_BACKOFF_JITTER=0 CLOUDPROVIDER_BACKOFF_MODE=v2 CLOUDPROVIDER_BACKOFF_RETRIES=6 CLOUDPROVIDER_RATELIMIT=true CLOUDPROVIDER_RATELIMIT_BUCKET=100 CLOUDPROVIDER_RATELIMIT_BUCKET_WRITE=100 CLOUDPROVIDER_RATELIMIT_QPS=10 CLOUDPROVIDER_RATELIMIT_QPS_WRITE=10 CNI_PLUGINS_URL=https://kubernetesartifacts.azureedge.net/cni-plugins/v0.9.1/binaries/cni-plugins-linux-amd64-v0.9.1.tgz CONTAINERD_DOWNLOAD_URL_BASE=https://storage.googleapis.com/cri-containerd-release/ CONTAINERD_VERSION=1.3.9 CONTAINER_RUNTIME=docker CUSTOM_HYPERKUBE_IMAGE= ENABLE_MULTIPLE_STANDARD_LOAD_BALANCERS=false ETCD_DOWNLOAD_URL=mcr.microsoft.com/oss/etcd-io/ ETCD_VERSION=3.3.22 EXCLUDE_MASTER_FROM_STANDARD_LB=true HYPERKUBE_URL=mcr.microsoft.com/ IDENTITY_SYSTEM=azure_ad IS_IPV6_ENABLED=false KMS_PROVIDER_VAULT_NAME=',variables('clusterKeyVaultName'),' KUBELET_PRIVATE_KEY=',parameters('clientPrivateKey'),' KUBERNETES_VERSION=1.18.16 KUBE_BINARY_URL= LOAD_BALANCER_DISABLE_OUTBOUND_SNAT=false LOAD_BALANCER_SKU=Standard LOCATION=',variables('location'),' MAXIMUM_LOADBALANCER_RULE_COUNT=250 MOBY_VERSION=19.03.14 MS_APT_REPO=https://packages.microsoft.com NETWORK_API_VERSION=2018-08-01 NETWORK_MODE=transparent NETWORK_PLUGIN=azure NETWORK_POLICY= NETWORK_SECURITY_GROUP=k8s-master-16102130-nsg PRIMARY_AVAILABILITY_SET= PRIMARY_SCALE_SET=k8s-agentpool1-16102130-vmss RESOURCE_GROUP=',variables('resourceGroup'),' ROUTE_TABLE=k8s-master-16102130-routetable SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),'',variables('servicePrincipalClientSecret'),'',variables('singleQuote'),' SUBNET=k8s-subnet SUBSCRIPTION_ID=',variables('subscriptionId'),' TAGS= TENANT_ID=',variables('tenantID'),' USE_INSTANCE_METADATA=true USE_MANAGED_IDENTITY_EXTENSION=true VIRTUAL_NETWORK=k8s-vnet-16102130 VIRTUAL_NETWORK_RESOURCE_GROUP= VM_TYPE=vmss VNET_CNI_PLUGINS_URL=https://kubernetesartifacts.azureedge.net/azure-cni/v1.2.2/binaries/azure-vnet-cni-linux-amd64-v1.2.2.tgz ')]",
    "provisionScriptParametersMaster": "[concat('COSMOS_URI= MASTER_VM_NAME=',variables('masterVMNames')[variables('masterOffset')],' ETCD_PEER_URL=',variables('masterEtcdPeerURLs')[variables('masterOffset')],' ETCD_CLIENT_URL=',variables('masterEtcdClientURLs')[variables('masterOffset')],' MASTER_NODE=true NO_OUTBOUND=false AUDITD_ENABLED=false CLUSTER_AUTOSCALER_ADDON=false APISERVER_PRIVATE_KEY=',parameters('apiServerPrivateKey'),' CA_CERTIFICATE=',parameters('caCertificate'),' CA_PRIVATE_KEY=',parameters('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',parameters('kubeConfigCertificate'),' KUBECONFIG_KEY=',parameters('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',parameters('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',parameters('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',parameters('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',parameters('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ENABLE_AGGREGATED_APIS=',string(parameters('enableAggregatedAPIs')),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
    "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "resourceGroup": "[resourceGroup().name]",
    "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
    "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
    "scope": "[resourceGroup().id]",
    "servicePrincipalClientId": "msi",
    "servicePrincipalClientSecret": "msi",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "sshNatPorts": [
      22,
      2201,
      2202,
      2203,
      2204
    ],
    "storageAccountBaseName": "",
    "storageAccountPrefixes": [],
    "subnetName": "k8s-subnet",
    "subscriptionId": "[subscription().subscriptionId]",
    "tenantId": "[subscription().tenantId]",
    "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
    "useInstanceMetadata": "true",
    "useManagedIdentityExtension": "true",
    "userAssignedClientID": "",
    "userAssignedID": "",
    "userAssignedIDReference": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedID'))]",
    "virtualNetworkName": "[concat(parameters('orchestratorName'), '-vnet-', parameters('nameSuffix'))]",
    "virtualNetworkResourceGroupName": "''",
    "vmType": "vmss",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "vnetNameResourceSegmentIndex": 8,
    "vnetResourceGroupNameResourceSegmentIndex": 4,
    "vnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "windowsCSIProxyURL": "",
    "windowsEnableCSIProxy": false,
    "windowsPauseImageURL": "",
    "windowsProvisioningScriptsPackageURL": ""
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('agentPublicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('agentLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('agentLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('agentLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('agentPublicIPAddressName'))]"
              }
            }
          }
        ],
        "outboundRules": [
          {
            "name": "LBOutboundRule",
            "properties": {
              "allocatedOutboundPorts": 0,
              "backendAddressPool": {
                "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
              },
              "enableTcpReset": true,
              "frontendIPConfigurations": [
                {
                  "id": "[variables('agentLbIPConfigID')]"
                }
              ],
              "idleTimeoutInMinutes": 30,
              "protocol": "All"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('agentpool1VMNamePrefix'))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('agentpool1VMNamePrefix'), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('agentpool1VMNamePrefix')), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('agentLbID')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[variables('agentpool1VMNamePrefix')]",
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssCSE",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                  },
                  "publisher": "Microsoft.Azure.Extensions",
                  "settings": {},
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0"
                }
              },
              {
                "name": "[concat(variables('agentpool1VMNamePrefix'), '-computeAksLinuxBilling')]",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.AKS",
                  "settings": {},
                  "type": "Compute.AKS-Engine.Linux.Billing",
                  "typeHandlerVersion": "1.0"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('agentpool1VMNamePrefix')]",
                "properties": {
                  "enableAcceleratedNetworking": false,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig1",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                          }
                        ],
                        "primary": true,
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig2",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig3",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig4",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig5",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig6",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig7",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig8",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig9",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig10",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig11",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig12",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig13",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig14",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig15",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig16",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig17",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig18",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig19",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig20",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig21",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig22",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig23",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig24",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig25",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig26",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig27",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig28",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig29",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig30",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig31",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpool1VnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[parameters('linuxAdminUsername')]",
            "computerNamePrefix": "[variables('agentpool1VMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:1.4.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=agentpool1,storageprofile=managed,storagetier=Standard_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    iptables -I FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "dataDisks": null,
            "imageReference": {
              "offer": "[variables('agentpool1osImageOffer')]",
              "publisher": "[variables('agentpool1osImagePublisher')]",
              "sku": "[variables('agentpool1osImageSKU')]",
              "version": "[variables('agentpool1osImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": 2,
        "name": "[variables('agentpool1VMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('agentpool1VMNamePrefix'))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "agentpool1",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "[if(contains(split('canadacentral,centralus,eastus,eastus2,northcentralus,northeurope,southcentralus,westeurope,westus',','),variables('location')),3,if(equals('centraluseuap',variables('location')),1,2))]",
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": null,
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetCidr')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('masterSubnet')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      },
      "tags": null,
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22-22",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allow_kube_tls",
            "properties": {
              "access": "Allow",
              "description": "Allow kube-apiserver (tls) traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443-443",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "tags": null,
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('masterLbName')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                }
              ],
              "primary": true,
              "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ]
      },
      "tags": null,
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterFqdnPrefix')]"
        },
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "[concat('SSH-', variables('masterVMNamePrefix'), 0)]",
            "properties": {
              "backendPort": 22,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 22,
              "protocol": "Tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBRuleUDP",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 1123,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 1123,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "Udp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": 443,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_D2_v3"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "computerName": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n\n- path: /etc/systemd/system/etcd-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').etcdMonitorSystemdService,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n      \n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n      \n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5STyW7bQAyG73oKIj3LalDk0LmlWVqjsC2gy7WgR7RDeBZ1hlKgty80srwEiZyepOGQH3/+lLDm3xQie6egvc527CoFpa8yS4IVCqoMwKElBbtmTTlWlXe5RYdbCvurWKMe72MXhWwG0J5QAQyuycSeBYB1/Sos1qT7jDqwDyzdncEYl6n1QM2dryjXgYU1mgzgyUdZkjz7sFMgoaEMQHsnyI5C6pZPaQdgi1tSYHWYWdbBR7+Rmfa28DEWfU1wJDS8nper9vPsevbpSCkbY0pvWHcK5pullzJQJCcpg1w7zD7q+f7ry8Pdavk4/5rCAC2ahhRcFS2GwvA6tTQk6am92/D26oxwe3+/Wv4pb39+e0kg0afak+xYsGMZCIGib4Km/Tr6wN+GohzOALpuFNzYw9mS9aFTcPNxwSnYetNYWvjGjWWjrqHdvtL2CSXKk4IJWQcZWK2c6Q6rPEJt5FeIo1XPiFtyUizSaqp5RU5YuvwHibDbxsv8FkNueJ3vTZ/odZ4xgSTR+XHci368BRyMPvuWTxzuf4CE25fX77D6padvMP7D3CkXL9CPqRO+vWvK7MPD6jH7FwAA//+80EWUzwQAAA==\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5xWb28axxN+z6c45feW5Qx2nPxQrxIhNI7kONSkSauqQsPucGzZ27nuzhGTT1/tHQfHX1u1JQQ7z/PM3PzZG8j1V3Rek+1Hq25rqa3qR2NSrQwZFDD0W1FkIcN+tCxmKCDXHt0K3ebY5yBrm197xqwVRQZmaHxgRhFrdP1IkmVHRuQGLJbnkrKcLFo+EvY5ysDNnSaneT004P1DGULlQVhSKKTTrCWYVhQtyPMD8ndyy37ErggegkfQFt0mDnHuKcKfziDFfpRJ18m0dORpzh1JWUzex4HhLDJWX3fk/qrb6b7tdG+bKuPCmDEZLdf96OP8gXjs0KPlDUZSlkHI8Z+v9sVe/bVBgEt9MAsBaoWOtUcBSjn0PvlpezRQyv38qh0FmDH0XeROr7TBFFUSMrAxWbLrjAovoOBFMgfja0uhNAtDqcjgCVJMrq9OGGYgl0WedE/ZvP6BSffqyJQDL5J4BS42lJYZK21x+dkxlDYJeZkpMdcGkxhZNpMNSpH1cRPYWUNmaj4vyOkfwJqsyEhh8kAK24/vBsMKMdNWbTN31Sn/K4s0Gi0LCacdS3TsYwkd6bgmUKGEJDvX6XGcPwqHnb892SY4d7TSCl1SmisLWpiZUM1M+zByIjdFqq1PHupJutdzlGtpsH2vM82PYFN07Qm6lZY4kJIKy+33OIfC8ITJQYrleNRnX8igK1MyQUlW+fZXMFoBa5sOarffcLYgWrYf0VPhJP5aEEN79MRoFar6dCfVHpOaoCzCMFatvfc4MyL27CAXTEu0VavtehBZKiHhhZmu0Oj4Aj5gqhIe8Ja4fhltiesGrRpAnyyYc9+P427vTdkt3X7v+s3/K6C2PmQARU6Ok00fBRcGedtPYTTnWgKffdKDqA8Elri+TNzGnTuaa6Nt2pzp3NHTuhnMpfYuwbtI9rhLPDOSTeo2Fof/FOh5gaDQVbcRKlG+HJJTiBdN3yaeRmfsi+ATOxDVDy9yh3P9lPwuHjEjRjEqrad4qaMir3k7wodwfApfeHThUY4pv3l0FaPZGTc31/VhObMCqqF9Lqfb98Aur4cKhihcxrvJqgHSFJ7RCZ0LFy6MpLu57eLu7QZZXRUi3OdoVRLafhMnG/9sr+yC21ajpOl8gU74QjP65Mv9ZDoavr8bTR8ng+m3j1/upsO7wfBu0Luajj/f/9G9vnrd3oFGw/cvgW21BqPJtNt7O/0w/DSd3A16r29Pi13E7an1Xt/WqOu3N+fVzuKOYhu+GwbU5cCOQUdRPavTAO3KETYAYPwPnbZKbrbrx4pMkeGn0HGbzam5PSFLsVPcmqMoC4Qx8KIfHbg9qeG9KbvukoT3Jt7H1AorcMLoWX19ntEoVxA9iw9RtUrm9TPM7wApWo4/gYUU1UeFljWvxQQ5vFCbwTsE9dma9Xb/3PflSS7POKP8OLRy5zGUXoqvuVy16rodLLsnyxW25VJoq56frdulml3U2S/e5cKdFTpVwePqPUt/URlPVOqscF2yM+W6HNBe3f43+vxL698AAAD//8wcSOqEDQAA\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xVTW/jRgy9+1cMciwykh3sFoUAnRY9BOimBgL0UvRAj2iZ9cxQ4FDaur++GFl2HH82pyB87/GRb8RAR3+gJOJYmWEx21JsKrPkZhZQoQGFamZMhICV2fYrtI6jCnuPYgNEaFGmeurAHUBplxTDzBgPK/QpSxijhFKZiW87DxHHvzsOHUeMertD6tBlkU6IhXT3zUNKb6OpfSsbuUHrhJQc+JkxG076hvqDZVsZlT63ysJAEWUyZB/OlX8oQIuVCU6KQE448VoLx6HklMpMlYiK+1+vqFTDolj8Uix+PpVb9t4v2ZPbVeZ1/ca6FEwYdcI4DgFyDn8+3VB9+muCgrQp46wF79mB4rQKaiTVa/AJn57Nk7XOc99kpTW1dYnqTr3Dv71g8XfieAruhAdqUOqxfKj0SVFG/XoxL16+zIt5MS8XL5/rebP1KCO9R4FtwthSPFNJ1EaKrXUoatfk8cJZrqTSQeFEr3O3uHtA3eJuoo7T94LTgMK94uctHTed6p+eV8yaVKDLvVCelbcYnUeIKHv8GkGzXgtZ6Dd24N+VBVr8Bh040t1rYg9KHOv8Cp/fUQZy+MYN/vpPHuVQ2etl+4eMBpDS02ocyaOWH7U91iM0KBY9Oj2RGOMPHElZbCvg0HYoxE39ZZ72kI4biwO5bMsqBeRe66/hWBZek6fYnm5GmNU6+L8pjau1kg078jRu4OBjcWiU9suw4Bz3UW0nNOQX/CBS6CgzUT6SVZRAERSbcbjWWd0Ipg37pv46n8/3qD7hRU8n2GBUAp9OljjUL8dPbGDfB/ye0dPhOD0eqM5+ODyWjQmZsATdVOZsjKsaKfk75M9VQWh+j353vGyf5RyMHxStKd+DW576JGW+GL5MGxAsb7PO2l30G0Csp5WdHuqNfmfP+UIlJHrA/AHQYtTy+3gDm9cxN93Zd1Sl2N6xfAjx7PBfzS7/5xgbH+W6myFeD/CuwgF2P6ybEo9Smz0O5qb2tYQu03lIfxjTfwEAAP//ExjK2nMIAAA=\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SSMY/bMAyF9/wKIXMVIx2KQkCmTjfc1UCBLkUHRqYdIpJoULQP/veFEtdJL0njySD5Hh8/CHr6iZKJkzPjdnWk1DhTc7OKqNCAglsZkyCiM8dhjzb7AzZDQJnLuQe/9KasGFfGBNhjyEVpjBKKM56TCgfbB0h4qnuOPSdMemOce/RF2wuxkE7fAuT8dopw3mATN2i9kJKHsDLmwFnfUN9Zjs6oDGVD2QiUUOYc9tEV5aMIHToTvWwieeHMrW48x4pzropCEiqefy9iN24326+b7Zdrl3oIoeZAfnLmpX1jrQUzJp1nPMcIhfGv9b9m69/zBEiXS9vaMuA5tdTtqhGkCrQ/JQio1aW3/mTW1gaEBsViQK+7guBc7oVbCpS6XQshz8Vx93nZNnIYIr7ykHQGdQ0L1dvL+UvbmFgENejBmQrVV3eG/nqMIDbQ3s7JH5h8uO/GJWZ6onwH6DBp9QoJOmxeGkxKOtkfqEqpu04vCM33FKblsZwpfHgpd48vT+20eLHrH1L4P4GHTvdQ3GJ4Kn/K408AAAD//+KoAOX7AwAA\n\n\n\n\n\n- path: /etc/kubernetes/addons/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5ySy07rQAyG93kKK8uj01bsUF6ADSAUBBvEwp2Y1GoyHsae0L49yqWlrQCJ7Oby+/fnCwZ+pqgsvgBMFdtye61LllV3lW3ZVwU8SMNun0nL9mhYkxYZwAJKek+kVpIj7qjKYmoOXw111BRfCg3ilTIAgEgqKbpR2WvrKCkUkOfD/VQAL3mQSvPXU887MqzQcKbZqpE6/w/jWQ0tXfjfix9Bk1IcwnSvRm2xTWtahCi7/RAA0FFcD4IPNLeZHv9GRL4Kwt60R1KKHTv6jeemNzuFwmQb8sYOjaoJwYsvpyRP5e0RZIWB/x3O3Tjxb4Y1owon/o3rFoMeCLAlDTh9D40bec9Lm59RyUUynW13vNPOyPed0B937Hztx+jL1f8MAAD//62kjQpEAwAA\n\n- path: /etc/kubernetes/addons/azure-cloud-provider.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9SVT4/aPBDG7/4UFpdcXvOqtyq3dg+99J9A6mW1qib2EFwSO/KMI7GfvrLNLoWNEGgL2t4ihxk/z2+eDEopAYP9gYGsd7UMDeg5RF77YB+BrXfzzXuaW///+E5srDO1vOsiMYaF71D0yGCAoRZSdtBgR+lJyk1sMDhkzKW6VCjCMFqNtZxxiDgTUjrosZa0Jca+hscYUOnOR6OG4EdrMIgQO6RaKAmD/RR8HKiW97PZg5AyIPkYNOYTHNEx5fMRQ5N1KKkDAmN+HID1Oj/FwaTD11n/aJ2xrr0FAd/hAlep7RODE2KFlC/HdM41FJtfqDmzLh2WRewHrX10/Nxksrq8pAGSueRdlbteSfkA74SHIbUlRsdq9F3sUTXWFT2XD2MyalV1HLWKUAdkqvZZS3fI+6pFrv6rSuaqhysE7OoE9lGbCtF58btE5NmhO2Hz+sG7ynetSoxUi8wX7Lld+I4XXYv8ryy0Y+M3WW9Hl95o2RH7AC3usTfI8MR+WV7edUA08ZUbXEHskhJwznOGsBvFrq1OlfPUcn44HEtqV63yb/6YzuUTza6THQz1UUmBYyxtxAABemQMtF8eX8BBi0Y8C4YCl7cDJvvgDATz8/NiKaTUoNfWtb03WMsFgvnmuu1fBdoXOWoI2NvYvwT7dth8LxJvjoZ2M3nLbM7OzYTzk7wmuGShK1v+/K4OJF90CIQ28WtWcuD6dwAAAP//NH/WfLULAAA=\n\n- path: /etc/kubernetes/addons/azure-cni-networkmonitor.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUTY/bNhC9+1cMFuhRlpMiRcBbkGzRAl3HiLu909TYJkxytMOhavXXF5RsryTb2y2PnHnvzbeu7V/I0VJQoOs6ls2H2cGGSsE3jZ7CGmXmUXSlRasZQNAeFeh/EmNhgi0Cyt/EB0/BCvHJIdbaoIJD2mAR2yjoZwBOb9DFzAFZ6ZXEx/6vqih4HfQOeZ6hHFAwzi2VnipU8AMNBWMdzmKNJhNFdGiEuCf1Wsz+j4EKwOFzLK61Ul1pwbWwFty1va+0dZYg52zYPXcO3T8Pf860Xh+fg260dXrjUMGnxU8zAEFfu4vXsGj5uVFg90LrChECiRZLYeBuXIqCXOgkFI12VzWqunZFlKKmSsGDcMKHDn6uVn41W2Ir7VenY1x2vewbVASqsDBsxRrtTt5CDnkcSQEHbBV8PTl+yU2L34NrL5FSnTHECh6PNkocAzsZJofTFuuc3i2Sl3SJB6DRLuEou/xwu0UjCpa0NnusksOL6CvRQx/OLdTjEU2S/wmaSOXE1qN57Lo8SpKiAmdDOp7shoJoG5AHjS4mK3YZi/ys1ztU4A3PvTVMkbYyN+TLC9NpH23YlePVVM1ivph/npKtknMrcta0Cn7fLklWjBGDDPwimtTNDAXBo6iBqRuoxjrcYaUgN2VgZIyU2GAcIxhfEkaZ/AKYOin4eeEn3x49cavg46cnOzI56+0dlo+LN2h+GfFgaMYU5/r/9n395/LL0+OEpxvAX5n8VBhga9FVP3B7bckH7/XMNh9uOHTglZa96vZ1nscp7+fAtSGXPD5RCuO0zxHjRvI5igUnhwVjTSMdn4G9QtloLjmFGySOdm+ixvYzStChR+H2LpZqKU2w5caeVfcUZdmP6Gh0+jQHB+c6sAzteAdy9b0Y+8v+zXK3mu3s3UX7DxVOoXy3zHWB3mC/rtUtgX8DAAD//7FW8xO6BwAA\n\n- path: /etc/kubernetes/addons/blobfuse-flexvolume.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/6SUQW/7NgzF7/4UQoEdHaeHAYVuw9pDgbUIlnV3RmYcIZSoiVQQf/vBcdLaSVsU+OtI8v2ixxcZkv8Xs3iO1kBK0hzuq72PrTWPgIHjGrUKqNCCgq2MiRDQmg3xZlsE6y3h8cBU+ygKRJjPI5LAoTX7ssFaelEMlTEEGyQZKMbsH6SGlD5QY7VsMEdUlIXnxlERxVwL5oMfcHeaC95VktANlJJaUFxrBsWuH7naJ7TmbybysXs7DZzqeVoZR40JcHyLcABPsCG05vflb5UxgoROOY9TAdTt/prc/HoHlTGKIdE7d7qu4dBM/Il8PD/zPs5CjKygnuOEe5FAURYHhHkxZ7anRAW1TtzOiJeNDidlz9lr/yeByOvprmOC9eUHXPbqHdDlMtutj177iUNu8Y+bqjEZ/ys+Y/tYso/d2u2wLUMqz13k9/LTEV0ZrE2VI3N9TuYfzEHm7XoM6umYMorMF3OZ2GNvDXQYNTHTVdsYTphhyN28sj7Hm/4BqOANdgBvCdRBPnccRwUfMb/P1j95NuPxATq0Jri8CN5lFt7qwnFo9g/SnGUlYHONKgHt/WK5eJiTVoVoxeRdb83z9pV1lVEwavURiXDJbu5ryAlFr7y6VIYnEmbFgIFzb839cvniJx3ywf8CYHT0wiVOIZc9HpgSlc5HmaDCMLwC3VnToLrm47/fjLSzpLnFQSbuvkAdIDfE3UU1om6SvULsWEb9BJo+5X1j6RvIT/xNH4z94ivDYg35WI7V/wEAAP//iqrT+wgGAAA=\n\n- path: /etc/kubernetes/addons/coredns.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/secrets-store-csi-driver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/ip-masq-agent.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xVwW7jNhC96ysGAXqklGSxRiqghyKbQ4AkDTbY3ifU2CFMcmhyqFpFP76gZDtSdtPu9lT6Npz3Zub5UYPB/E4xGfYtYAip6S+qrfFdC5+QHPsnksqRYIeCbQXg0VEL+GeOpExQDtNO4Ya8HO5SQE0tbPMzqTQkIVcBWHwmmwocQLML7MnLeywwgqMnoVQbbrTNSSiqRLE3hftMYqazMRO7jr1DjxuK9RLmuKMWPpNmr42lMV0MxRY8d1SlQLo0lEOHQk8SUWgzTC3KEAqUrTV+82VMGONxHplSARzuv3js0Vh8ttTCx/OfKoBElrRwnLIcin65m4kAsL1KCkN4X4RFtwBCLthT2fk/Uo5dcH8X+xv+UU3vWVAM+xnVUX7Mwkmj/UrobvRJIlGBu8W/c9S4nBANRyPDtcWUHkYTTfZQpQGloxGj0R6yXzjJA8kfHLctFMJDvOQ+LaT92i+cWrDG5/1RRrYUl1Mp2NLQwvWh6K/FRek3b4cTJYeC4djCzd4kSUvg2HJkS289h0Wqb5Hs8mk2gB5tXvq4HFqvSUsLD/ykX6jLlk5FX4nOpna+hbrZk87yg6A3pTR7QeMpzqT6pxc/HeNwQy04HWtndOTEa6k1u4ZTal4Vahbotr+sP9bnS5LHbO0jW6OHFm7XDyyPkdK8FMbNzJulPaXIl5enTOhXv6zRJjrdJ9J5NB17ob3MgSGa3ljaULcwGEDPNju65+zlTaV3hVCa/dps1ASdYQBc4XlEeWmhIdHNlHlKiZQ4R02LSpF2mdKyOoAOuXxc3JKeHMehxO/N7MIaZ34IfzkjmKaYof/L5FP8HsOyiX8jqpRS1XwlnbbR9ZHw+7aROgn9P1xKNz7lSIcPy3GU5eOAv9TI5dnfY9plitjR9e2nz7OHeXFej7/m6jW0uqpXH+qLy5/ri1Xz4fKwfdLuzvjtHWu0B7dXB/cNXt96odiXm9V5qv4OAAD//6huZCIQCAAA\n\n- path: /etc/kubernetes/addons/kube-proxy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWTW/jNhO++1cQAV7siZK9eFsEBHooskGxaJMGG2zvY2psE+bXkkPXRtv/XpCSbcmylRS9VMf5eGaemYekwKvfMETlrGC7xWyrbCPYg7MrtX4CP2uAQMwYk8VSHcBowf6cMcZYP3ObluiD2x+qLnB7Hyvl6t0CtN/AoiS02D+nJb7k0LZICkDK2RIgtUJLD85alNkoipUV9BZXsHoHodZqWWejRqrPzg4jRcLw8PnTF8HuFvPq4//n1bya14uPdyXAuAYFu1OeYKkxtsYVAqWAPwFhPFb946+ZQYLjBCwYbInywpSfimZP9CCP7niIhGbGmIYl6g4PmsZZAxbWGKocFiwSliG1HX3JLKTSODtSPkd0pHjEsFO5zh2FhG3r0hnvLFrqN1c8pDAIZl3TQd5HDt4Pwjjns/4ewftYn2TwCdA4+4o0GMR/n9V4Wbe3FD3KzCWiRkkutLwMkNz80iN6q9B0rxfdJt8A4SsFIFwfWmA6+Dwmp7Wy668loNhD33LswcD+q4UdKJ21K9h38//NGCM0Xp+i+qvKnx6wmO52NN1p4mCto3J8+/jdViGRixL0SBhNUVVE4t41g6XnL8oNNilnlZvjIlcGRUqCblM/fChpxxXmzwflgqLDg4YYn4sK2kXzzIkf84/bcRrDkABnWzy0E+DBabxUNWRyp26dz/kuCPb4LZ1gGduBTjjihqsVShLs2b12LE9Fz0B3j3sVKV7LetyjTPQPk0alCr+HbhA/5gMcf7X6cI1TAT2p3BIoi6E3KumMAducl8+vaYoz3l2WPwxu7zas7j0tpxRlYI2CGRkqo2Rw0a2oks7ULsb6vJEejNgtqsV9tfh+iPGStH5xWsmDYJ9Xz45eAka0dIq6clO0X8DoUpDYk3Y2fksYaWBjTPok2GI+N2cVo0xFhs4S7qkf7oPaKY1rbATL8jhrxulk8Mkl28fnzGTLC9BGsBpJ1jHqWmI4LebMIkbNi4dvXKRB29DkHV9UHGOfRzsCR5L8qvtd4G+82pe7GLneVSQkW+/bZ73STm5H0MdHf+AcYuQmjcsHJtbj1jJ73bn/zQgmpM9YTMs25br7xo8Ib/XzVldZGc9Iv7uwHdjb7N7ZzoGljb52WyYphjpuIGAtoQhOrZSEviom9DiJ/A6Z3BDJJOwNaU8IexLups5uqmwS7qrkbguOd7p4Ai/elsXNi+6qbPKz9zr4E2Kj3zYXBdPKpv3s7wAAAP//ELctYjwMAAA=\n\n- path: /etc/kubernetes/addons/metrics-server.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RWXa/bNgx9968Q8i7nFi2wwsAeujtguEB7YdwUfVckxtWiL5B01uzXD/5K4sQxmq3Bbv0SWRbJc3hIMSrZL4BkYyjE7k22tcEUYgW4sxo+aB3rwJkHVkaxKjIhgvJQCA+MVpMkwB1gv01JaSjEtl6DpD0x+EwIp9bgqLEU7RcMwEC5jUvtamLA1odtDBeMNSzak8qYGLwKqgLMx2Y+GijEC+gYtHWQSSmzUxK4VjpXNX+NaP9WbGPIt+9bywO9xy7yS3Qwwa2DXlxQvDsTrB1QkUmhkv0DY53aYFIsGk8IFGvU0O+laKhdhGjgZLUkVty/D5I0rzvAdW9aAbe/zlK3+Eux/joRFr4xhCapNAHAQHJx7yHwd7r/TzL9ZoOxoXpVakUHL7BpIgyJm2GVCXFZe/McqF7/CZrbiphsy1ub8RYJ1sBq0GFegHF02fiTCMr8z9fCv5RnpMuhAaRK9oQfBLa6NR+YvhqtvqtnxiCKvvxa5Qw4qBTHn7SFzjjcXZbzifnDRuUNWbyUpwu8+DSKvLhBR0qgGxwEDjRH7GvgPUmV0gSlFJEPgwm5EO/evW1NEkaOOrpCfH4s2x1WWAGXh1PnGVUp0XEE/H6YMj/uT8hVFneq8ulk+mYqfjzBNYeMwSenGHrTk0w0z5VsNI8bBZgnP+Bs16M2eb4eIKGNaHn/6BTR80kryiF7Gm1zW7reQMfAygbAAyo5R0AI61XVfNWYe6sxUtxwrqNfRqLlMfPLs0tt95C/zX8Zeylr58rorN4X4mnzHLlEIGivgQGc9yqYY76kWF6BJYWUTXQHLG0g0DWCZEeTBxLCBhDBSGUMApHkfQL69SkwYFDuqRykjAZWozq5LMtIhXA21N8mesciVJYYZybEh/Lp+mXVH8170seb9+6z4NglnZtstrKvdnrVDZEL/Lvjjd0lQ4hBtdXWps8fV18A7WZfiAb94Kjsq/uTDdbXvhBvHh6Ozoav3fY/AQAA//+trpg4SQ0AAA==\n\n- path: /etc/kubernetes/addons/pod-security-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RVTU8jORC996+w2APSSgmLVqxWfcsGWCHxEWU0XNAcKu1K8MTt8pTthMyvH9lxN+kQUAThMEeXq55fva5XDVbdIztFphSWtKpWJ4vTCXo4LebKyFKMSH7BKrDyq1G6L2r0IMFDWQhhoMZSWFYLpXGGshACjCEPXpFxMUMIh1VFte27DNMHbR+hPw8TZIMeXV/RCWhNS5QjpqnSeAs1ulIc/XlUCKFhgjpjgZRkajAwQ95CqEliKcZYkamUxsJZrGLRM7lSeA4YKcbHRk38wlWgE+FuAsohWJgorbzC9H4vM1qQDnU39EjO36JfEs9blBgbEfucWCtTir9SGzU8leKfs7O/z3La1WjYLbs6b88czMB9dchrCTjo2GcMDsyqiPpeKxOeXrsN1mqs0XjQ/zMF615JnLp0vfO21+sVB5kURudZVf7QkyKpmiOfSJxC0H49KtYC18TPaJHsPmAcjFc1dtD2opYLNtBK8W5qO8FeUjugO6ag3dv2aDIYfwTFKM+Z7LZJ4qgPrq+7NonBisxUzW7A5jPW1q/OFeejZfqOeTLi2WHF6PNB0tIsgeVgdNWkx1l0Ho2/T88MNah624gN39Zim4HksbajXSa7Cc4nD9ySGRP5D5qthVvHwMwacdr1cJqPWytihzffD8YI8s7oVezoUml0K+exbqTYtjpPoOpD8I/E6mcag/783zRSi8b4Qx2cRx6Txl0/B2fLzg/inRMb23Zl0RNgVdZWPBzjk0cTmbrjb6k3R4ErTHeWZGOwtLAUrpMWyBNXJmEejoPDTuV6BxTriWxZf4oqnWX426iywfpjqvynjFRmtkOcvN0OIxBpHOM01jUSvUG0EOLl13vlm7kwiQsrqb8uSuhtevZVfAaNVxXkv94eLD5b2IP48bDCblD6TGHfAjQk0e0J9MfF3WXxKwAA//+Y7F5+PQsAAA==\n\n\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:1.4.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=master,node.kubernetes.io/exclude-from-external-load-balancers=true,node.kubernetes.io/exclude-disruption=true,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -e\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    iptables -I FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\n    #EOF\n- path: /etc/systemd/system/etcd.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').etcdSystemdService,'\n\n- path: /opt/azure/containers/setup-etcd.sh\n  permissions: \"0744\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -x\n    if [[ ! -s /etc/environment ]]; then\n        echo \"\" >> /etc/environment\n    fi\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n    sudo sed -i \"/^DAEMON_ARGS=/d\" /etc/default/etcd\n    /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" --listen-metrics-urls \"',variables('masterEtcdMetricURLs')[copyIndex(variables('masterOffset'))],'\" --quota-backend-bytes=2147483648 | tee -a /etc/default/etcd\n  \n\n    #EOF\n\ndisk_setup:\n  /dev/disk/azure/scsi1/lun0:\n    table_type: gpt\n    layout: true\n    overwrite: false\nfs_setup:\n  - label: etcd_disk\n    filesystem: ext4\n    device: /dev/disk/azure/scsi1/lun0\n    extra_opts:\n      - -E\n      - lazy_itable_init=1,lazy_journal_init=1\n  - label: ephemeral0\n    filesystem: ext4\n    device: ephemeral0.1\n    replace_fs: ntfs\nmounts:\n  - - LABEL=etcd_disk\n    - /var/lib/etcddisk\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": [
            {
              "createOption": "Empty",
              "diskSizeGB": 256,
              "lun": 0,
              "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
            }
          ],
          "imageReference": {
            "offer": "[parameters('osImageOffer')]",
            "publisher": "[parameters('osImagePublisher')]",
            "sku": "[parameters('osImageSku')]",
            "version": "[parameters('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "master",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset'))), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',variables('provisionScriptParametersMaster'), ' IS_VHD=true /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "tags": {},
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')), '/computeAksLinuxBilling')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.AKS",
        "settings": {},
        "type": "Compute.AKS-Engine.Linux.Billing",
        "typeHandlerVersion": "1.0"
      },
      "tags": {},
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "primaryAvailabilitySetName": {
      "type": "string",
      "value": "[variables('primaryAvailabilitySetName')]"
    },
    "primaryScaleSetName": {
      "type": "string",
      "value": "[variables('primaryScaleSetName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[variables('resourceGroup')]"
    },
    "routeTableName": {
      "type": "string",
      "value": "[variables('routeTableName')]"
    },
    "securityGroupName": {
      "type": "string",
      "value": "[variables('nsgName')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[variables('subnetName')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "vnetResourceGroup": {
      "type": "string",
      "value": "[variables('virtualNetworkResourceGroupName')]"
    }
  }
}
